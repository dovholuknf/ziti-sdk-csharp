name: Matrix Build and publish Ziti Native to nuget

on:
  push:
    branches:
      - enable-macos-linux
  workflow_dispatch:
    inputs:
      version:
        description: Version of CSDK/Nuget Package
        default: 0.28.1
        required: true
env:
  ZITI_SDK_C_BRANCH: ${{ github.event.inputs.version }}
  BUILD_NUMBER: ${{ github.run_number }}
  BASEDIR: ${{ github.workspace }}/ZitiNativeApiForDotnetCore
  TARGETDIR: ${{ github.workspace }}/ZitiNativeApiForDotnetCore/build
jobs:
  native-matrix-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macOS-10.15, windows-2019]
        arch: [x64]
        include:
          - ext: so
            prefix: lib
            dist: linux
            os: ubuntu-18.04
          - ext: dylib
            prefix: lib
            dist: macos
            os: macOS-10.15
          - ext: dll
            pathext: /Release
            dist: win
            os: windows-2019
          - ext: dll
            pathext: /Release
            dist: win
            arch: x86
            os: windows-2019
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: setup/build CMake
        run: |
          echo "build number = ${BUILD_NUMBER}"
          cmake -E make_directory ${{ env.TARGETDIR }}
          cmake -S ${{ env.BASEDIR }} -B ${{ env.TARGETDIR }}
          cmake --build ${{ env.TARGETDIR }} --config Release
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.dist }}.${{ matrix.arch }}.${{ matrix.prefix }}ziti4dotnet.${{ matrix.ext }}
          path: ${{ env.TARGETDIR }}/library${{ matrix.pathExt }}/${{ matrix.prefix }}ziti4dotnet.${{ matrix.ext }}
          if-no-files-found: error
  create-nuget-package:
    runs-on: ubuntu-latest
    needs: [native-matrix-build]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: mkdir ${{runner.workspace}}/native
      - name: download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ${{runner.workspace}}/native
      - name: move files to expected locations
        run: |
          mkdir -p ${{runner.workspace}}/runtimes/osx-x64/native
          mv ${{runner.workspace}}/native/macos.x64.libziti4dotnet.dylib ${{runner.workspace}}/runtimes/osx-x64/native/libziti4dotnet.dylib
          mkdir -p ${{runner.workspace}}/runtimes/linux-x64/native
          mv ${{runner.workspace}}/native/linux.x64.libziti4dotnet.so ${{runner.workspace}}/runtimes/linux-x64/native/libziti4dotnet.so
          mkdir -p ${{runner.workspace}}/runtimes/win-x86/native
          mv ${{runner.workspace}}/native/win.x86.ziti4dotnet.dll ${{runner.workspace}}/runtimes/win-x86/native/ziti4dotnet.dll
          mkdir -p ${{runner.workspace}}/runtimes/win-x64/native
          mv ${{runner.workspace}}/native/win.x64.ziti4dotnet.dll ${{runner.workspace}}/runtimes/win-x64/native/ziti4dotnet.dll
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 5.0.x
      - name: Create the Nuget package
        run: nuget pack -version 1.2.3 ${{runner.workspace}}/native-package.nuspec
      - name: upload nuget package
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/Ziti.NET.Standard.native.1.2.3.nupkg
          if-no-files-found: error
      